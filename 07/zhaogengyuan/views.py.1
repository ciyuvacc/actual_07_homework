#encoding: utf-8
import sys
reload(sys)
sys.setdefaultencoding('utf-8')
from flask import Flask
from flask import render_template   
from flask import request
from flask import redirect,url_for
import models

app=Flask(__name__)

STATIC_URL_ROOT='/static/'
@app.route('/')
def root():
    return redirect(url_for('index'))

@app.route('/index/')
def index():
    return render_template('login.html')

@app.route('/login/', methods=["POST"])
def login():
    username = request.form.get('username','')
    password = request.form.get('password','')
    if models.validate_user_login(username,password):
        return render_template('list.html', \
                        login_success='Login Success!!', \
                        user=username)
    else:
	return render_template('index.html', \
			loginerror='用户名或密码错误', \
			loginusername=username, \
			loginpassword=password)
#def login():
#    username = request.form.get('username','')
#    password = request.form.get('password','')
#    if models.validate_user_login(username,password):
#        return redirect(url_for('listUser'))
#    else:
#        return render_template('login.html', \
#                        loginerror='用户名或密码错误', \
#                        loginusername=username, \
#                        loginpassword=password)

		
@app.route('/listUser/')
#@app.route('/listUser/',methods=["GET"])
def listUser():
#    username = request.form.get('username','') 
#    print username
    username = request.form.get('query','') 
    users = models.query_user(username)
    for user in users:
        print user
    return render_template('list.html', \
                users=users)

@app.route('/register/', methods=["POST"])
def register():
    username = request.form.get('username','')
    password = request.form.get('password','')
    age = request.form.get('age','')
    address = request.form.get('address','')
    if models.query_user(username):
        return render_template('index.html', \
                        register_error='注册失败，用户名重复', \
                        username=username)
    elif isNone(password):
        return render_template('index.html', \
                        register_error='注册失败，密码为空', \
                        password=password)
    elif isNotNum(age):
        return render_template('index.html', \
                        register_error='注册失败，年龄必须为数字', \
                        username=username, \
                        password=password, \
                        age=age, \
                        address=address)
    else:
        models.validate_user_add(username,password,age,address)
        return '注册成功'

@app.route('/users/',methods=["POST","GET"])		
def users():
    username = request.form.get('username','')
    user = username
    return render_template('index.html')


@app.route('/createUser/')
def createUser():
   username = request.form.get('username','')
   return render_template('create.html', \
                user=username, \
                username=username)

@app.route('/addUser/')
def addUser():
    return render_template('create.html')
@app.route('/modifyUser/')
def modifyUser():
    return render_template('update.html', \
                user=user)

@app.route('/updateUser/')
def updateUser():
    return render_template('update.html')
@app.route('/deleteUser/')

def isNone(string):
    if string:
        return False
    else:
        return True

def isNotNum(num):
    try:
        x = int(num)
    except TypeError:
        return True
    except ValueError:
        return True
    except Exception, e:
        return True
    else:
        return False


if __name__ == '__main__':
    app.run(host='0.0.0.0',port=8888,debug=True)
